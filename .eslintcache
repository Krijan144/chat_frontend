[{"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/index.js":"1","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/reportWebVitals.js":"2","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/App.js":"3","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/routes.js":"4","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/chat.js":"5","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Join.js":"6","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Infobar/InfoBar.js":"7","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/input/input.js":"8","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Messages.js":"9","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Message.js":"10","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/textcontainer/TextContainer.js":"11"},{"size":543,"mtime":1611295286371,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611295286371,"results":"14","hashOfConfig":"13"},{"size":113,"mtime":1611296313368,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1611298099668,"results":"16","hashOfConfig":"13"},{"size":1709,"mtime":1611639119948,"results":"17","hashOfConfig":"13"},{"size":964,"mtime":1611642294738,"results":"18","hashOfConfig":"13"},{"size":518,"mtime":1611638686304,"results":"19","hashOfConfig":"13"},{"size":706,"mtime":1611468100250,"results":"20","hashOfConfig":"13"},{"size":912,"mtime":1611639162685,"results":"21","hashOfConfig":"13"},{"size":902,"mtime":1611638731415,"results":"22","hashOfConfig":"13"},{"size":930,"mtime":1611639332535,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1c5j94u",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/index.js",[],["48","49"],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/reportWebVitals.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/App.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/routes.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/chat.js",["50","51"],"import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport queryString from 'query-string'\nimport InfoBar from \"./Infobar/InfoBar\";\nimport Input from \"./input/input\";\nimport Messages from \"./Messages\";\nimport TextContainer from \"./textcontainer/TextContainer\";\n\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [room, setRoom] = useState('');\n  const [name, setName] = useState('');\n  const [users, setUsers] = useState()\n  const ENDPOINT = \"http://localhost:4000\"\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search)\n    setName(name);\n    setRoom(room);\n\n    socket = io.connect(ENDPOINT);\n    socket.on('tests', (msg) => {\n      console.log(msg);\n    })\n    socket.emit('join', { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message])\n    })\n\n    socket.on(\"roomUsers\", ({ users }) => {\n      setUsers(users)\n    })\n  }, [message])\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit('chatMessage', message, () => {\n        setMessage('')\n      })\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"container mt-5\">\n        <h4>Chat App</h4>\n        <InfoBar room={room} />\n        <Messages message={messages} name={name} users={users} />\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      {/* <TextContainer users={users} /> */}\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Join.js",["52"],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Infobar/InfoBar.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/input/input.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Messages.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/Message.js",[],"/home/sgn13/Documents/ReactProjects/Chat_app/client/src/components/textcontainer/TextContainer.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":44,"column":6,"nodeType":"63","endLine":44,"endColumn":15,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"65","line":6,"column":18,"nodeType":"59","messageId":"60","endLine":6,"endColumn":25},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'TextContainer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["68"],"'setRoom' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [message, messages]",{"range":"71","text":"72"},[1160,1169],"[message, messages]"]